name: Build, Test, Analyze, and Publish NuGet

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  packages: write
  pull-requests: read
  checks: write

jobs:
  build-test-analyze-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necesario para SonarCloud

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Install dependencies
        run: dotnet restore Bank/Bank.sln

      - name: Build solution
        run: dotnet build Bank/Bank.sln --no-restore --configuration Release

      - name: Run unit tests with coverage
        run: |
          dotnet test Bank/Bank.sln \
            --no-build \
            --configuration Release \
            --logger "trx;LogFileName=test_results.trx" \
            --results-directory ./TestResults \
            --collect:"XPlat Code Coverage" \
            --settings Bank/coverlet.runsettings

      - name: Report test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Unit Tests
          path: ./TestResults/test_results.trx
          reporter: dotnet-trx

      - name: Install SonarScanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Run SonarCloud analysis
        run: |
          export PATH="$PATH:$HOME/.dotnet/tools"
          dotnet sonarscanner begin \
            /k:"si784_webapi" \
            /o:"si784" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

          dotnet build Bank/Bank.sln --configuration Release

          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Create packages directory
        run: mkdir -p ./packages

      - name: Pack NuGet package
        run: |
          dotnet pack Bank/Bank.WebApi/Bank.WebApi.csproj \
            --configuration Release \
            --no-build \
            --output ./packages \
            -p:PackageId=Bank.WebApi.U1Lab02 \
            -p:PackageVersion=1.0.${{ github.run_number }} \
            -p:Authors="${{ github.repository_owner }}" \
            -p:Description="Bank Web API NuGet Package" \
            -p:RepositoryUrl=https://github.com/${{ github.repository }} \
            -p:RepositoryType=git \
            -p:PackageLicenseExpression=MIT

      - name: List generated packages
        run: |
          echo "Generated packages:"
          ls -la ./packages/
          echo "Package details:"
          find ./packages -name "*.nupkg" -exec basename {} \;

      - name: Publish to GitHub Packages
        run: |
          dotnet nuget push packages/*.nupkg \
            --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
            --api-key ${{ secrets.GHTOKEN }} \
            --skip-duplicate
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GHTOKEN }}

      - name: Verify package upload
        run: |
          echo "Workflow completed. Check packages at:"
          echo "https://github.com/${{ github.repository }}/packages"
